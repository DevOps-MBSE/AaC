on:
  workflow_call:

defaults:
  run:
    working-directory: ./python

jobs:
  os_build_matrix:
    name: Build ${{ matrix.os }} Secure Install Air Gap
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, windows-latest, macos-13, macos-14] # Annoyingly, Github actions don't support anchors

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install ${{ github.event.repository.name }} Package
        run: pip install -e .[all]

      - name: Create Dependencies Package
        id: os_id
        if: matrix.os != 'windows-latest'
        run: |
          ./secure_install/pipeline_scripts/create_install_archive.bash

      - name: Create Dependencies Package
        if: matrix.os == 'windows-latest'
        run: |
          ./secure_install/pipeline_scripts/create_install_archive.bat

      - name: Upload Dependencies Package
        uses: actions/upload-artifact@v4
        with:
          name: secure_install_${{ matrix.os }}
          path: python/secure_install/aac_secure_install_*


  os_test_matrix:
    name: Test ${{ matrix.os }}/${{ matrix.py_version }} Secure Install Air Gap
    needs: os_build_matrix
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, windows-latest, macos-13, macos-14] # Annoyingly, Github actions don't support anchors
        py_version: ["3.11.7"]   # py_version: ["3.9.0", "3.10.0", "3.11.0"]
        # exclude:
        #   - os: ubuntu-latest
        #     py_version: 3.9.0
        #   - os: ubuntu-latest
        #     py_version: 3.10.0
        #   - os: macos-latest
        #     py_version: 3.11.0

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version:  ${{ matrix.py_version }}

      - name: Checkout Repository # Checked-out repository is necessary to test the first party plugin generation.
        uses: actions/checkout@v4
          
      - name: Download Secure Install
        uses: actions/download-artifact@v4
        with:
          name: secure_install_${{ matrix.os }}
          path: python/

      - name: Install from Secure Install
        if: matrix.os != 'windows-latest'
        run: |
          chmod +x ./aac_secure_install_*/install_aac_air_gap.bash
          ./aac_secure_install_*/install_aac_air_gap.bash

      - name: Install from Secure Install
        if: matrix.os == 'windows-latest'
        run: |
          cd (Get-ChildItem -Filter aac_secure_install_*)
          .\install_aac_air_gap.bat

      - name: Test Plugin Commands
        run: echo "Replace with testing the package commands of this repo"

      - name: Upload logs from failed runs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: failed_test_log
          path: ${{ env.pythonLocation }}/**/aac.log
