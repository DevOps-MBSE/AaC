name: Create Python Release

on:
  workflow_dispatch:

defaults:
  run:
    working-directory: ./python

jobs:
  build_deployment_artifacts:
    name: Build Artifacts
    uses: Coffee2Bits/AaC/.github/workflows/python-build-artifacts.yml@0c6546e03ff01802b005718d5c6ba5d610491e8b

  deploy_artifacts:
    name: Deploy Artifacts
    runs-on: ubuntu-latest
    needs: build_deployment_artifacts
    steps:
      - name: Download API Documentation
        uses: actions/download-artifact@v2
        with:
          name: api-documentation
          path: python/docs/build/html/

      - name: Github Pages and Sphinx Deployment
        run: echo "This is where I'd deploy if I were setup"

      - name: Download Python Wheel
        uses: actions/download-artifact@v2
        with:
          name: aac_wheel
          path: python/dist/

#       - name: Publish distribution to PyPI
#         uses: pypa/gh-action-pypi-publish@master
#         with:
#           password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Download Version File
        uses: actions/download-artifact@v2
        with:
          name: version_file
          path: python/

      - name: Set Version Value
        run: echo "package_version=$(cat version.txt)" >> $GITHUB_ENV

      - name: Verify Version Value
        run: echo this is our new version \${{ env.package_version }}\

      # - name: Create Github Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     draft: true
      #     fail_on_unmatched_files: true
      #     name: "v${{ env.package_version }}"
      #     files: |
      #       python/dist/*.whl

      - name: Create Github Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          draft: true
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.package_version }}"
          prerelease: true
          title: "Development Build"
          files: |
            python/dist/*.whl