"""AaC Plugin implementation module for the validate plugin."""
# NOTE: It is safe to edit this file.
# This file is only initially generated by the aac gen-plugin, and it won't be overwritten if the file already exists.

from aac.plugins.plugin_execution import PluginExecutionResult, plugin_result
from aac.validate import validated_source, validated_definition
from aac.io.parser import parse
from aac.lang.definition_helpers import get_definition_by_name

plugin_name = "validate"


def validate(architecture_file: str, definition_name: str) -> PluginExecutionResult:
    """
    Validate the AaC definition file.

    Args:
        architecture_file (str): The path to the AaC file to be validated.
    """

    def _validate() -> str:
        if definition_name:
            return _validate_definition_in_file(architecture_file, definition_name)
        else:
            return _validate_context_and_file(architecture_file)

    with plugin_result(plugin_name, _validate) as result:
        return result

def _validate_definition_in_file(file_path, definition_name) -> str:
    success_message = f"'{definition_name}' in {file_path} is valid."

    definitions_in_file = parse(file_path)
    definition_to_validate = get_definition_by_name(definition_name, definitions_in_file)
    if definition_to_validate:
        with validated_definition(definition_to_validate):
            return success_message

def _validate_context_and_file(file_path) -> str:
    success_message = f"{file_path} is valid."
    with validated_source(file_path):
        return success_message
