"""The material_model plugin module."""
# NOTE: It is safe to edit this file.
# This file is only initially generated by aac gen-plugin, and it won't be overwritten if the file already exists.

from aac.plugins import hookimpl
from aac.cli.aac_command import AacCommand, AacCommandArgument
from aac.package_resources import get_resource_file_contents
from aac.plugins.material_model.material_model_impl import gen_bom


@hookimpl
def get_commands() -> list[AacCommand]:
    """
    Return a list of AacCommands provided by the plugin to register for use.

    This function is automatically generated. Do not edit.

    Returns:
        list of AacCommands
    """
    gen_bom_arguments = [
        AacCommandArgument("architecture_file", "The yaml file containing the material models to generate the BOM."),
        AacCommandArgument("output_directory", "The directory to write the generated BOM to."),
    ]

    plugin_commands = [
        AacCommand(
            "gen-bom",
            "Generate a Bill of Material from Arch-as-Code material models.",
            gen_bom,
            gen_bom_arguments
        ),
    ]

    return plugin_commands


@hookimpl
def get_plugin_aac_definitions() -> str:
    """
    Returns the CommandBehaviorType modeling language extension to the plugin infrastructure.

    Returns:
        string representing yaml extensions and data definitions employed by the plugin
    """
    return get_resource_file_contents(__package__, "material_model.yaml")