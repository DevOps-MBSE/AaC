"""The specifications plugin module."""
# NOTE: It is safe to edit this file.
# This file is only initially generated by aac gen-plugin, and it won't be overwritten if the file already exists.

from aac.cli.aac_command import AacCommand, AacCommandArgument
from aac.package_resources import get_resource_file_contents, get_resource_file_path
from aac.io.parser import parse
from aac.plugins import hookimpl
from aac.plugins.plugin import Plugin
from aac.plugins.specifications.specifications_impl import spec_validate


@hookimpl
def get_plugin() -> Plugin:
    """
    Returns information about the plugin.

    Returns:
        A collection of information about the plugin and what it contributes.
    """
    *_, plugin_name = __package__.split(".")
    plugin = Plugin(plugin_name)
    plugin.register_commands(_get_plugin_commands())
    plugin.register_definitions(_get_plugin_definitions())

    return plugin


def _get_plugin_definitions():
    plugin_resource_file_args = (__package__, "specifications.yaml")
    plugin_definitions = parse(
        get_resource_file_contents(*plugin_resource_file_args),
        get_resource_file_path(*plugin_resource_file_args),
    )
    return plugin_definitions


def _get_plugin_commands():
    spec_validate_arguments = [
        AacCommandArgument(
            "architecture_file",
            "The file to validate for spec cross-references.",
        ),
    ]

    plugin_commands = [
        AacCommand(
            "spec-validate",
            "Validates spec traces within the AaC model.",
            spec_validate,
            spec_validate_arguments,
        ),
    ]

    return plugin_commands
