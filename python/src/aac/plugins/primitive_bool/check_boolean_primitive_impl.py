"""The AaC Check boolean primitive plugin implementation module."""
# NOTE: It is safe to edit this file.
# This file is only initially generated by aac gen-plugin, and it won't be overwritten if the file already exists.

from aac.execute.aac_execution_result import ExecutionResult, ExecutionStatus
from aac.lang.plugininputvalue import PluginInputValue
from aac.execute.aac_execution_result import ExecutionResult


plugin_name = "Check boolean primitive"


def check_bool(value: str, arguments: list[PluginInputValue]) -> ExecutionResult:
    """Business logic for the Check bool constraint."""

    status = ExecutionStatus.SUCCESS
    messages: list[str] = []

    if isinstance(value, list):
        for item in value:
            if not isinstance(item, bool):
                status = ExecutionStatus.CONSTRAINT_FAILURE
                messages.append(f"{item} is not a valid bool value.")
    else:
        if not isinstance(value, bool):
            status = ExecutionStatus.CONSTRAINT_FAILURE
            messages.append(f"{value} is not a valid bool value.")

    return ExecutionResult(
        plugin_name, "Check bool", status, messages
    )
