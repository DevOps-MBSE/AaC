"""The material-model plugin module."""
# NOTE: It is safe to edit this file.
# This file is only initially generated by aac gen-plugin, and it won't be overwritten if the file already exists.

from aac.cli.aac_command import AacCommand, AacCommandArgument
from aac.plugins import hookimpl
from aac.plugins.plugin import Plugin
from aac.plugins._common import get_plugin_definitions_from_yaml
from aac.plugins.first_party.material_model.material_model_impl import plugin_name, gen_bom


@hookimpl
def get_plugin() -> Plugin:
    """
    Returns information about the plugin.

    Returns:
        A collection of information about the plugin and what it contributes.
    """
    plugin = Plugin(plugin_name)
    print("Running material-model get_plugin()")
    plugin.register_commands(_get_plugin_commands())
    plugin.register_definitions(_get_plugin_definitions())
    return plugin


def _get_plugin_commands():
    gen_bom_arguments = [
        AacCommandArgument(
            "architecture-file",
            "The deployment model to convert into a BOM.",
            "str",
        ),
        AacCommandArgument(
            "output-directory",
            "The directory where the BOM file should be placed.",
            "str",
        ),
    ]

    plugin_commands = [
        AacCommand(
            "gen-bom",
            "Generates a CSV Bill of Materials (BOM) from a list of deployment models.",
            gen_bom,
            gen_bom_arguments,
        ),
    ]

    print(f"len(plugin_commands) = {len(plugin_commands)}")
    return plugin_commands


def _get_plugin_definitions():
    return get_plugin_definitions_from_yaml(__package__, "material_model.yaml")
