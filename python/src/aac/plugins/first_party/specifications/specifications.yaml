plugin:
  name: Specifications
  description: An AaC plugin that enables requirement definition and traceability in Architecture-as-Code.
  commands:
    - name: spec-csv
      group: Generation
      helpText: Generate a CSV file listing requirements.
      input:
        - name: architecture-file
          type: file
          python_type: str
          description:  The file to convert into CSV.
        - name: output-directory
          type: file
          python_type: str
          description: The directory into which the CSV file will be generated.
      acceptance:
        - scenario: A CSV file is generated from a valid specification.
          given:
            - The {{spec-csv.input.architecture-file}} contains a valid architecture specification.
          when:
            - The aac app is run with the spec-csv command.
          then:
            - A message saying spec CSV generation was successful is printed to the console.
            - A CSV file is generated.
  definitionValidations:
    - name: Referenced IDs exist
    - name: Requirement ID is unique
---
validation:
  name: Referenced IDs exist
  description: Verifies IDs in a requirement reference exist within the context.
  behavior:
    - name: Verify that requirement references exist.
      type: request-response
      description:
      input:
        - name: input
          type: ValidatorInput
      output:
        - name: results
          type: ValidatorOutput
      acceptance:
        - scenario: Successfully Validate a requirement reference id exists.
          given:
            - The ValidatorInput content consists of valid AaC definitions.
            - The ValidatorInput contains some AaC fields that reference requirement IDs.
          when:
            - The ValidatorInput is validated.
          then:
            - The ValidatorOutput does not indicate any errors.
            - The ValidatorOutput does not indicate any warnings.
            - The ValidatorOutput indicates the definition under test is valid.
        - scenario: Fail to validate a definition's requirement reference fields.
          given:
            - The ValidatorInput content consists of otherwise valid AaC definitions.
            - The ValidatorInput contains at least one requirement reference id that does not exist.
          when:
            - The ValidatorInput is validated.
          then:
            - The ValidatorOutput has errors.
            - The ValidatorOutput errors indicate that there are invalid requirement id references.
---
validation:
  name: Requirement ID is unique
  description: Verifies IDs in a requirement ID is globally unique within the context.
  behavior:
    - name: Verify that requirement IDs are globally unique.
      type: request-response
      description:
      input:
        - name: input
          type: ValidatorInput
      output:
        - name: results
          type: ValidatorOutput
      acceptance:
        - scenario: Successfully validate a requirement ID's uniqueness.
          given:
            - The ValidatorInput content consists of valid AaC definitions.
            - The ValidatorInput contains some AaC spec definitions where requirement IDs are unique.
          when:
            - The ValidatorInput is validated.
          then:
            - The ValidatorOutput does not indicate any errors.
            - The ValidatorOutput does not indicate any warnings.
            - The ValidatorOutput indicates the definition under test is valid.
        - scenario: Fail to validate a requirement id uniqueness.
          given:
            - The ValidatorInput content consists of otherwise valid AaC definitions.
            - The ValidatorInput contains some AaC spec definition where duplicate requirement IDs are present.
          when:
            - The ValidatorInput is validated.
          then:
            - The ValidatorOutput has errors.
            - The ValidatorOutput errors indicate that there are non-unique requirement IDs.
---
ext:
  name: addLoggingToBehaviorType
  type: BehaviorType
  enumExt:
    add:
      - logging
---
ext:
  name: addSpecificationToRoot
  type: root
  schemaExt:
    add:
      - name: spec
        type: Specification
---
ext:
  name: addSpecTraceToModel
  type: model
  schemaExt:
    add:
      - name: requirements
        type: RequirementReference
---
ext:
  name: addSpecTraceToBehavior
  type: Behavior
  schemaExt:
    add:
      - name: requirements
        type: RequirementReference
---
ext:
  name: addSpecTraceToSchema
  type: schema
  schemaExt:
    add:
      - name: requirements
        type: RequirementReference
---
schema:
  name: Specification
  fields:
    - name: name
      type: string
    - name: description
      type: string
    - name: sections
      type: SpecSection[]
    - name: requirements
      type: Requirement[]
  required:
    - name
  validation:
    - name: Required fields are present
      arguments:
        - name
---
schema:
  name: SpecSection
  fields:
    - name: name
      type: string
    - name: description
      type: string
    - name: requirements
      type: Requirement[]
  required:
    - name
  validation:
    - name: Required fields are present
      arguments:
        - name
---
schema:
  name: Requirement
  fields:
    - name: id
      type: string
    - name: shall
      type: string
    - name: parent
      type: RequirementReference
    - name: child
      type: RequirementReference
    - name: attributes
      type: RequirementAttribute[]
  required:
    - id
    - shall
  validation:
    - name: Required fields are present
      arguments:
        - id
        - shall
    - name: Requirement ID is unique
      arguments:
        - id
---
schema:
  name: RequirementAttribute
  fields:
    - name: name
      type: string
    - name: value
      type: string
  required:
    - name
    - value
  validation:
    - name: Required fields are present
      arguments:
        - name
        - value
---
schema:
  name: RequirementReference
  fields:
    - name: ids
      type: string[]
  required:
    - ids
  validation:
    - name: Required fields are present
      arguments:
        - ids
    - name: Referenced IDs exist
      arguments:
        - ids
