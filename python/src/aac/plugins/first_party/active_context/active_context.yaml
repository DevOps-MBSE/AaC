model:
  name: active-context
  description: The active-context plugin manages the active context from the CLI.
  behavior:
    - name: list-files
      type: command
      description: Display the files in the active context.
      output:
        - name: files
          type: string[]
          python_type: list[str]
          description: Files that are in the active context.
      acceptance:
        - scenario: Display a list of all the files in the active context.
          when:
            - The command {{active-context.list-files}} is run.
          then:
            - A list of the files in the active context will be displayed.
    - name: remove-file
      type: command
      description: Remove a file from the active context.
      input:
        - name: file
          type: file
          python_type: str
          description: The name of the file that is being removed from the active context.
      acceptance:
        - scenario: The file is removed from the active context.
          given:
            - The file named {{active-context.remove-file.input.file}} is on the file system.
            - The file named {{active-context.remove-file.input.file}} is in the active context.
          when:
            - The command is run with {{active-context.remove-file.input.file}}.
          then:
            - The file named {{active-context.remove-file.input.file}} will be removed from the active context.
        - scenario: The file is not in the active context.
          given:
            - The file named {{active-context.remove-file.input.file}} is not in the active context.
          when:
            - The command is run with a file named {{active-context.remove-file.input.file}}.
          then:
            - An error message will be displayed stating that the file named {{active-context.remove-file.input.file}} is not in the active context.
        - scenario: The file is not in the file system.
          given:
            - The file named {{active-context.remove-file.input.file}} is not on the file system.
          when:
            - The command is run with {{active-context.remove-file.input.file}}.
          then:
            - An error message will be displayed stating that the file is not on the file system.
    - name: add-file
      type: command
      description: Add a file to the active context.
      input:
        - name: file
          type: file
          python_type: str
          description: The name of the file to add to the active context.
      acceptance:
        - scenario: The file is added to the active context.
          given:
            - The file named {{active-context.add-file.input.file}} is on the file system.
            - The file named {{active-context.add-file.input.file}} is not in the active context.
          when:
            - The command is run with {{active-context.add-file.input.file}}.
          then:
            - The definitions contained in the file {{active-context.add-file.input.file}} will be added to the active context.
        - scenario: The file is already in the active context.
          given:
            - The file named {{active-context.add-file.input.file}} is on the file system.
            - The file named {{active-context.add-file.input.file}} is in the active context.
          when:
            - The command is run with {{active-context.add-file.input.file}}.
          then:
            - Any new definitions contained in the file {{active-context.add-file.input.file}} will be added to the active context.
            - Any existing definitions contained in the file {{active-context.add-file.input.file}} will be updated in the active context.
        - scenario: The file is not on the file system.
          given:
            - The file named {{active-context.add-file.input.file}} is not in the file system.
          when:
            - The command is run with {{active-context.add-file.input.file}}.
          then:
            - An error message will be displayed stating that the file {{active-context.add-file.input.file}} is not on the file system.
    - name: reset-context
      type: command
      description: Reset the active context to a fresh state before any changes have been made.
      acceptance:
        - scenario: The active context gets reset.
          given:
            - User-provided definitions are in the active context.
          when:
            - The command {{active-context.reset-context}} is run.
          then:
            - All user-provided definitions are removed from the active context.
    - name: list-definitions
      type: command
      description: List all definitions within the active context.
      output:
        - name: definitions
          type: string[]
          python_type: list[str]
          description: The list of all definitions that are in the active context.
      acceptance:
        - scenario: Display a list of all the definitions in the active context.
          when:
            - The command {{active-context.list-definitions}} is run.
          then:
            - A list of all the definitions in the active context will be displayed.
    - name: describe-definition
      type: command
      description: Describe a definition in the active context.
      input:
        - name: definition-name
          type: string
          python_type: str
          description: The name of a defintion in the active context.
      output:
        - name: definition-structure
          type: string
          python_type: str
          description: The YAML representation of the structure of the definition.
        - name: definition-source
          type: file
          python_type: str
          description: The source file of the definition in the active context.
        - name: definition-start
          type: int
          python_type: int
          description: The line on which the definition starts in {{active-context.describe-definition.output.definition-source}}.
      acceptance:
        - scenario: Display information about a definition in the active context.
          given:
            - Definition named {{active-context.describe-definition.input.definition-name}} is in the active context.
          when:
            - The comamnd {{active-context.describe-definition}} is run.
          then:
            - A description of the definition named {{active-context.describe-definition.input.definition-name}} will be displayed.
        - scenario: An error occurs when the named definition is not in the active context.
          given:
            - Definition named {{active-context.describe-definition.input.definition-name}} is not in the active context.
          when:
            - The comamnd {{active-context.describe-definition}} is run.
          then:
            - An error message is displayed to the user stating that the definition named {{active-context.describe-definition.input.definition-name}} is not in the active context.
    - name: import-state
      type: command
      description: Configure the active context to be initialized with the definitions, plugins, etc from a state file.
      input:
        - name: state-file
          type: file
          python_type: str
          description: The persistent state file from which to get information about how to configure the active context.
      acceptance:
        - scenario: Import an existing active context from a persistence state file.
          given:
            - The state file {{active-context.import-state.input.state-file}} exists on the file system.
            - The state file {{active-context.import-state.input.state-file}} defines a valid active context.
          when:
            - The comamnd {{active-context.import-state}} is run.
          then:
            - The active context is configured to include all definitions defined by {{active-context.import-state.input.state-file}}.
            - The active context is configured to include all plugins defined by {{active-context.import-state.input.state-file}}.
        - scenario: The state file does not exist on the file system.
          given:
            - The state file {{active-context.import-state.input.state-file}} does not exist on the file system.
          when:
            - The comamnd {{active-context.import-state}} is run.
          then:
            - An error message is displayed to the user stating that the state file {{active-context.import-state.input.state-file}} does not exist.
            - The current active context is not modified.
    - name: export-state
      type: command
      description: Export the current active context to a state file.
      input:
        - name: state-file-name
          type: string
          python_type: str
          description: The name of the state file in which to export the current active context.
        - name: --overwrite
          type: bool
          python_type: bool
          description: A flag indicating that the state file should be overwritten, if it exists.
      output:
        - name: state-file
          type: file
          python_type: str
          description: The persistent state file defining the current active context.
      acceptance:
        - scenario: Export the current active context to a state file.
          given:
            - The file {{active-context.export-state.output.state-file}} does not exist.
          when:
            - The command {{active-context.export-state}} is run with {{active-context.export-state.input.state-file-name}}.
          then:
            - The state file {{active-context.export-state.output.state-file}} is written to the file system with the expected information.
        - scenario: Export the current active context to a state file that already exists.
          given:
            - The file {{active-context.export-state.output.state-file}} already exists on the file system.
          when:
            - The command {{active-context.export-state}} is run with {{active-context.export-state.input.state-file-name}} and {{active-context.export-state.input.--overwrite}}.
          then:
            - The state file {{active-context.export-state.output.state-file}} is written to the file system with the expected information.
        - scenario: Do not export the active context when the state file that already exists.
          given:
            - The file {{active-context.export-state.output.state-file}} already exists on the file system.
          when:
            - The command {{active-context.export-state}} is run with {{active-context.export-state.input.state-file-name}}.
          then:
            - An error message is displayed to the user stating that the file {{active-context.export-state.output.state-file}} already exists.
            - The state file {{active-context.export-state.output.state-file}} is not modified.
