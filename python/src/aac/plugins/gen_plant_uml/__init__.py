"""Generated AaC Plugin hookimpls module for the aac-plantuml plugin."""
# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED
# This file is auto-generated by the aac gen-plugin and may be overwritten.

from aac.cli.aac_command import AacCommand, AacCommandArgument
from aac.package_resources import get_resource_file_contents, get_resource_file_path
from aac.io.parser import parse
from aac.plugins import hookimpl
from aac.plugins.gen_plant_uml.gen_plant_uml_impl import puml_component, puml_sequence, puml_object
from aac.plugins.plugin import Plugin

plugin_resource_file_args = (__package__, "gen_plant_uml.yaml")


@hookimpl
def get_commands() -> list[AacCommand]:
    """
    Return a list of AacCommands provided by the plugin to register for use.

    This function is automatically generated. Do not edit.

    Returns:
        list of AacCommands
    """
    puml_component_arguments = [
        AacCommandArgument(
            "architecture_file",
            "Path to a yaml file containing an AaC usecase from which to generate a Plant UML component diagram.",
        ),
        AacCommandArgument(
            "output_directory",
            "Output directory for the PlantUML (.puml) diagram file",
        )
    ]
    puml_sequence_arguments = [
        AacCommandArgument(
            "architecture_file",
            "Path to a yaml file containing an AaC usecase from which to generate a Plant UML sequence diagram.",
        ),
        AacCommandArgument(
            "output_directory",
            "Output directory for the PlantUML (.puml) diagram file",
        )
    ]
    puml_object_arguments = [
        AacCommandArgument(
            "architecture_file",
            "Path to a yaml file containing an AaC usecase from which to generate a Plant UML object diagram.",
        ),
        AacCommandArgument(
            "output_directory",
            "Output directory for the PlantUML (.puml) diagram file",
        )
    ]

    plugin_commands = [
        AacCommand(
            "puml-component",
            "Converts an AaC model to a Plant UML component diagram.",
            puml_component,
            puml_component_arguments,
        ),
        AacCommand(
            "puml-sequence",
            "Converts an AaC usecase to a Plant UML sequence diagram.",
            puml_sequence,
            puml_sequence_arguments,
        ),
        AacCommand(
            "puml-object",
            "Converts an AaC model to a Plant UML object diagram.",
            puml_object,
            puml_object_arguments,
        ),
    ]

    return plugin_commands


@hookimpl
def get_plugin_aac_definitions() -> str:
    """
    Return the plugins Aac definitions.

    Returns:
         string representing yaml extensions and definitions defined by the plugin
    """

    return get_resource_file_contents(*plugin_resource_file_args)


@hookimpl
def get_plugin() -> Plugin:
    """
    Returns information about the plugin.

    Returns:
        A collection of information about the plugin and what it contributes.
    """
    plugin_definitions = parse(
        get_plugin_aac_definitions(),
        get_resource_file_path(*plugin_resource_file_args)
    )

    *_, plugin_name = __package__.split(".")
    plugin = Plugin(plugin_name)
    plugin.register_commands(get_commands())
    plugin.register_definitions(plugin_definitions)

    return plugin
