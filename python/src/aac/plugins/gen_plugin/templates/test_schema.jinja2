# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from {{schema.package}}.{{get_python_name(schema.name)}} import {{schema.name}}

TEST_DATA_ALL = {{schema_to_test_dict(schema.name)}}
    
TEST_DATA_REQUIRED = {{schema_to_test_dict(schema.name, True)}}

class Test{{schema.name}}(unittest.TestCase):

    def test_{{get_python_name(schema.name)}}_from_dict_all_fields(self):
        {{get_python_name(schema.name)}}_dict = TEST_DATA_ALL
        instance = {{schema.name}}.from_dict(deepcopy({{get_python_name(schema.name)}}_dict))
        {% for field in schema.fields %}{% if get_python_primitive(field.type) != 'None' %}self.assertEqual(instance.{{get_python_name(field.name)}}, {{get_python_name(schema.name)}}_dict["{{get_python_name(field.name)}}"]){% else %}self.assertIsNotNone(instance.{{get_python_name(field.name)}}){% endif %}
        {% endfor %}

        {{get_python_name(schema.name)}}_dict = TEST_DATA_REQUIRED
        instance = {{schema.name}}.from_dict(deepcopy({{get_python_name(schema.name)}}_dict))
        {% for field in schema.fields if field.is_required%}{% if get_python_primitive(field.type) != 'None' %}self.assertEqual(instance.{{get_python_name(field.name)}}, {{get_python_name(schema.name)}}_dict["{{get_python_name(field.name)}}"]){% else %}self.assertIsNotNone(instance.{{get_python_name(field.name)}}){% endif %}
        {% endfor %}

if __name__ == '__main__':
    unittest.main()