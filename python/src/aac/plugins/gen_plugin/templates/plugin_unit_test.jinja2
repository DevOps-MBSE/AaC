from unittest import TestCase

{% set comma_joiner = joiner(", ") %}
{% if plugin.commands | length > 0 %}
from {{plugin.package}}.{{get_python_name(plugin.name)}}_impl import plugin_name, {% for command in plugin.commands %}{{comma_joiner()}}{{get_python_name(command.name)}}{% if command.run_before | length > 0 %}{% for before in command.run_before %}{{  comma_joiner() }}before_{{get_python_name(command.name)}}_{{get_python_name(before.command)}}{% endfor %}{% endif %}{% if command.run_after | length > 0 %}{% for after in command.run_after %}{{  comma_joiner() }}after_{{get_python_name(command.name)}}_{{get_python_name(after.command)}}{% endfor %}{% endif %}{% endfor %}
{% else %}
from {{plugin.package}}.{{get_python_name(plugin.name)}}_impl import plugin_name
{% endif %}

{% if plugin.context_constraints | length > 0 %}{% for ctx_constraint in plugin.context_constraints %}from {{plugin.package}}.{{get_python_name(plugin.name)}}_impl import {{get_python_name(ctx_constraint.name)}}
{% endfor %}{% endif %}

{% if plugin.schema_constraints | length > 0 %}{% for schema_constraint in plugin.schema_constraints %}from {{plugin.package}}.{{get_python_name(plugin.name)}}_impl import {{get_python_name(schema_constraint.name)}}
{% endfor %}{% endif %}

{% if plugin.primitive_constraints | length > 0 %}{% for primitive_constraint in plugin.primitive_constraints %}from {{plugin.package}}.{{get_python_name(plugin.name)}}_impl import {{get_python_name(primitive_constraint.name)}}
{% endfor %}{% endif %}


class Test{{get_python_name(plugin.name)}}(TestCase):
    {% for command in plugin.commands %}
    def test_{{get_python_name(command.name)}}(self):
        
        # TODO: Write tests for {{get_python_name(command.name)}}
        self.fail("Test not yet implemented.")
    {% endfor %}

    {% for ctx_constraint in plugin.context_constraints %}
    def test_{{get_python_name(ctx_constraint.name)}}(self):
        
        # TODO: Write tests for {{get_python_name(ctx_constraint.name)}}
        self.fail("Test not yet implemented.")
    {% endfor %}

    {% for schema_constraint in plugin.schema_constraints %}
    def test_{{get_python_name(schema_constraint.name)}}(self):
        
        # TODO: Write tests for {{get_python_name(schema_constraint.name)}}
        self.fail("Test not yet implemented.")
    {% endfor %}

    {% for primitive_constraint in plugin.primitive_constraints %}
    def test_{{get_python_name(primitive_constraint.name)}}(self):
        
        # TODO: Write tests for {{get_python_name(primitive_constraint.name)}}
        self.fail("Test not yet implemented.")
    {% endfor %}