"""Python module for the Modifier class."""
# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

from dataclasses import dataclass
import attr
from typing import Optional
from attr import attrib, validators
from aac.lang.field import Field


@dataclass(frozen=True)
class Modifier:
    """
    Autogenerated Modifier AaC schema

    name: str - The name of the modifier.
    description: Optional[str] - A description of the modifier.
    fields: list[Field]] - Optional fields to provide supporting information for the modifier.
    """

    name: str = attrib(init=attr.ib(), validator=validators.instance_of(str))
    description: Optional[str] = attrib(
        init=attr.ib(), validator=validators.optional(validators.instance_of(str))
    )
    fields: list[Field] = attrib(
        init=attr.ib(), validator=validators.instance_of(list[Field])
    )

    @classmethod
    def from_dict(cls, data):
        args = {}

        description = data.pop("description", None)
        args["description"] = description

        fields_data = data.pop("fields", [])
        fields = [Field.from_dict(entry) for entry in fields_data]
        args["fields"] = fields

        return cls(**args, **data)
