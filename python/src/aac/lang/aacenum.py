"""Python module for the AacEnum class."""
# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

from dataclasses import dataclass
import attr
from typing import Optional
from attr import attrib, validators
from aac.lang.aactype import AacType


@dataclass(frozen=True)
class AacEnum(AacType):
    """
    A definition that represents an enumerated type of value.  An example of when to use an 'enum' is when you want to provide several different options for a single value.

    enumerated_values: list[str] - A list of strings that encompass the enumeration's possible values.
    """

    enumerated_values: list[str] = attrib(
        init=attr.ib(), validator=validators.instance_of(list[str])
    )

    @classmethod
    def from_dict(cls, data):
        enumerated_values = data.pop("enumerated_values", [])

        return cls(enumerated_values=enumerated_values, **data)
