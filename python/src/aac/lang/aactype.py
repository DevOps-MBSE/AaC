"""Python module for the AacType class."""
# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

from dataclasses import dataclass
import attr
from typing import Optional
from attr import attrib, validators


@dataclass(frozen=True)
class AacType:
    """
    The base type for any data item defined in AaC.

    name: str - The name of the type.
    package: str - The 'dot notation' package name for the type.  All type names must be unique within an assigned type. The package will also define the directory structure produced by gen-plugin.
    description: Optional[str] - A brief description of the type.
    """

    name: str = attrib(init=attr.ib(), validator=validators.instance_of(str))
    package: str = attrib(init=attr.ib(), validator=validators.instance_of(str))
    description: Optional[str] = attrib(
        init=attr.ib(), validator=validators.optional(validators.instance_of(str))
    )

    @classmethod
    def from_dict(cls, data):
        description = data.pop("description", None)

        return cls(description=description, **data)
