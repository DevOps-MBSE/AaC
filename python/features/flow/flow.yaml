import:
  files:
    - ./System.yaml
    - ./ServiceOne.yaml
    - ./Subsystem.yaml
    - ./ServiceThree.yaml
    - ./External.yaml
---
actor:
  name: user
  description: |
    The human interacting with the system
---
actor:
  name: system
  description: |
    The system that is being interacted with
  model: System
---
actor:
  name: svc1
  description: |
    The first service in the system
  model: ServiceOne
---
actor:
  name: subsystem
  description: |
    The subsystem in the system
  model: Subsystem
---
actor:
  name: svc3
  description: |
    The third service in the system
  model: ServiceThree
---
usecase:
  name: Nominal flow of data through the system
  description: Something happens.
  participants:
    - user
    - system
  steps:
    - The user invokes doFlow on system
    - The system performs flow and responds to the user
---
usecase_step:
  name: The user invokes doFlow on system
  source: user
  target: system
  action: Process DataA Request to DataD Response
---
usecase_step:
  name: The system performs flow and responds to the user
  source: system
  target: user
---
usecase:
  name: Nominal flow within the system
  participants:
    - system
    - svc1
    - subsystem
    - svc3
  steps:
    - The system has been invoked to doFlow which triggers scv1
    - svc1 completes and calls subsystem to continue the flow
    - subsystem completes and calls svc3 to continue the flow
    - svc3 completes and provides the result back to system
---
usecase_step:
  name: The system has been invoked to doFlow which triggers scv1
  source: system
  target: svc1
  action: Process DataA Request
---
usecase_step:
  name: svc1 completes and calls subsystem to continue the flow
  source: svc1
  target: subsystem
  action: Delegate Processing DataB Request
---
usecase_step:
  name: subsystem completes and calls svc3 to continue the flow
  source: subsystem
  target: svc3
  action: Process DataC Request
---
usecase_step:
  name: svc3 completes and provides the result back to system
  source: svc3
  target: system
