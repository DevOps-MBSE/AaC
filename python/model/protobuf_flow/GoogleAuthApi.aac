---
schema:
  name: Authentication
  description: |
    `Authentication` defines the authentication configuration for API methods
    provided by an API service.

    Example:

        name: calendar.googleapis.com
        authentication:
          providers:
          - id: google_calendar_auth
            jwks_uri: https://www.googleapis.com/oauth2/v1/certs
            issuer: https://securetoken.google.com
          rules:
          - selector: "*"
            requirements:
              provider_id: google_calendar_auth
          - selector: google.calendar.Delegate
            oauth:
              canonical_scopes: https://www.googleapis.com/auth/calendar.read

    Google API Authentication Message
    https://github.com/googleapis/googleapis/blob/10c88bb5c489c8ad1edb0e7f6a17cdd07147966e/google/api/auth.proto#L43-L51

  fields:
  - name: rules
    type: AuthenticationRule[]
    description: |
      A list of authentication rules that apply to individual API methods.

      **NOTE:** All service configuration rules follow "last one wins" order.

  - name: providers
    type: AuthProvider[]
    description: Defines a set of authentication providers that a service supports.
---
schema:
  name: AuthenticationRule
  description: |
    Authentication rules for the service.

    By default, if a method has any authentication requirements, every request
    must include a valid credential matching one of the requirements.
    It's an error to include more than one kind of credential in a single
    request.

    If a method doesn't have any auth requirements, request credentials will be
    ignored.

    Google API AuthenticationRule Message
    https://github.com/googleapis/googleapis/blob/10c88bb5c489c8ad1edb0e7f6a17cdd07147966e/google/api/auth.proto#L62-L77

  fields:
  - name: selector
    type: string
    description: |
      Selects the methods to which this rule applies.

      Refer to [selector][google.api.DocumentationRule.selector] for syntax details.

  - name: oauth
    type: OAuthRequirements
    description: The requirements for OAuth credentials.

  - name: allow_without_credential
    type: bool
    description: |
      If true, the service accepts API keys without any other credential.
      This flag only applies to HTTP and gRPC requests.

  - name: requirements
    type: AuthRequirement[]
    description: Requirements for additional authentication providers.
---
schema:
  name: JwtLocation
  description: |
    Specifies a location to extract JWT from an API request.

    Google API JwtLocation Message
    https://github.com/googleapis/googleapis/blob/10c88bb5c489c8ad1edb0e7f6a17cdd07147966e/google/api/auth.proto#L80-L98

  fields:
  - name: header
    type: string
    description: Specifies HTTP header name to extract JWT token.

  - name: query
    type: string
    description: Specifies URL query parameter name to extract JWT token.

  - name: value_prefix
    type: string
    description: |
      The value prefix. The value format is "value_prefix{token}"
      Only applies to "in" header type. Must be empty for "in" query type.
      If not empty, the header value has to match (case sensitive) this prefix.
      If not matched, JWT will not be extracted. If matched, JWT will be
      extracted after the prefix is removed.

      For example, for "Authorization: Bearer {JWT}",
      value_prefix="Bearer " with a space at the end.
  validation:
    - name: Mutually exclusive fields
      arguments:
        - header
        - query
---
schema:
  name: AuthProvider
  description: |
    Configuration for an authentication provider, including support for
    [JSON Web Token(JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).

    Google API AuthProvider Message
    https://github.com/googleapis/googleapis/blob/10c88bb5c489c8ad1edb0e7f6a17cdd07147966e/google/api/auth.proto#L103-L173
  fields:
  - name: id
    type: string
    description: |
      The unique identifier of the auth provider. It will be referred to by
      `AuthRequirement.provider_id`.

      Example: "bookstore_auth".

  - name: issuer
    type: string
    description: |
      Identifies the principal that issued the JWT. See
      https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1
      Usually a URL or an email address.

      Example: https://securetoken.google.com
      Example: 1234567-compute@developer.gserviceaccount.com

  - name: jwks_uri
    type: string
    description: |
      URL of the provider's public key set to validate signature of the JWT. See
      [OpenID
      Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
      Optional if the key set document:
       - can be retrieved from
         [OpenID
         Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html)
         of the issuer.
       - can be inferred from the email domain of the issuer (e.g. a Google
       service account).

      Example: https://www.googleapis.com/oauth2/v1/certs

  - name: audiences
    type: string
    description: |
      The list of JWT
      [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
      that are allowed to access the resource. A JWT containing any of these audiences will
      be accepted. When this setting is absent, JWTs with audiences:
        - "https://[service.name]/[google.protobuf.Api.name]"
        - "https://[service.name]/"
      will be accepted.
      For example, if no audiences are in the setting, LibraryService API will
      accept JWTs with the following audiences:
        - https://library-example.googleapis.com/google.example.library.v1.LibraryService
        - https://library-example.googleapis.com/

      Example:

          audiences: bookstore_android.apps.googleusercontent.com,
                     bookstore_web.apps.googleusercontent.com

  - name: authorization_url
    type: string
    description: |
      Redirect URL if JWT token is required but not present or is expired.
      Implement authorizationUrl of securityDefinitions in OpenAPI spec.

  - name: jwt_locations
    type: JwtLocation[]
    description: |
      Defines the locations to extract the JWT.

      JWT locations can be either from HTTP headers or URL query parameters.
      The rule is that the first match wins. The checking order is: checking
      all headers first, then URL query parameters.

      If not specified,  default to use following 3 locations:
         1) Authorization: Bearer
         2) x-goog-iap-jwt-assertion
         3) access_token query parameter

      Default locations can be specified as followings:
         jwt_locations:
         - header: Authorization
           value_prefix: "Bearer "
         - header: x-goog-iap-jwt-assertion
         - query: access_token
---
schema:
  name: OAuthRequirements
  description: |
    OAuth scopes are a way to define data and permissions on data. For example,
    there are scopes defined for "Read-only access to Google Calendar" and
    "Access to Cloud Platform". Users can consent to a scope for an application,
    giving it permission to access that data on their behalf.

    OAuth scope specifications should be fairly coarse grained; a user will need
    to see and understand the text description of what your scope means.

    In most cases: use one or at most two OAuth scopes for an entire family of
    products. If your product has multiple APIs, you should probably be sharing
    the OAuth scope across all of those APIs.

    When you need finer grained OAuth consent screens: talk with your product
    management about how developers will use them in practice.

    Please note that even though each of the canonical scopes is enough for a
    request to be accepted and passed to the backend, a request can still fail
    due to the backend requiring additional scopes or permissions.

    Google API OAuthRequirements Message
    https://github.com/googleapis/googleapis/blob/10c88bb5c489c8ad1edb0e7f6a17cdd07147966e/google/api/auth.proto#L193-L202

  fields:
  - name: canonical_scopes
    type: string
    description: |
      The list of publicly documented OAuth scopes that are allowed access. An
      OAuth token containing any of these scopes will be accepted.

      Example:
        canonical_scopes: https://www.googleapis.com/auth/calendar,
                          https://www.googleapis.com/auth/calendar.read
---
schema:
  name: AuthRequirement
  description: |
    User-defined authentication requirements, including support for
    [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).

    Google API OAuthRequirements Message
    https://github.com/googleapis/googleapis/blob/10c88bb5c489c8ad1edb0e7f6a17cdd07147966e/google/api/auth.proto#L207-L232

  fields:
  - name: provider_id
    type: string
    description: |
      [id][google.api.AuthProvider.id] from authentication provider.

      Example:
          provider_id: bookstore_auth

  - name: audiences
    type: string
    description: |
      NOTE: This will be deprecated soon, once AuthProvider.audiences is
      implemented and accepted in all the runtime components.

      The list of JWT
      [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
      that are allowed to access. A JWT containing any of these audiences will
      be accepted. When this setting is absent, only JWTs with audience
      "https://[Service_name][google.api.Service.name]/[API_name][google.protobuf.Api.name]"
      will be accepted. For example, if no audiences are in the setting,
      LibraryService API will only accept JWTs with the following audience
      "https://library-example.googleapis.com/google.example.library.v1.LibraryService".

      Example:
          audiences: bookstore_android.apps.googleusercontent.com,
                    bookstore_web.apps.googleusercontent.com