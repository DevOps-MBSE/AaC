# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.jinjahelperfunction import JinjaHelperFunction


class JinjaHelperFunctionTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "description": "test",
            "package": "test",
            "module": "test",
            "function": "test",
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
            "package": "test",
            "module": "test",
            "function": "test",
        }


class TestJinjaHelperFunction(unittest.TestCase):
    def test_jinjahelperfunction_from_dict_all_fields(self):
        jinjahelperfunction_dict = JinjaHelperFunctionTestHelper.generate_data()
        instance = JinjaHelperFunction.from_dict(deepcopy(jinjahelperfunction_dict))
        self.assertEqual(instance.name, jinjahelperfunction_dict["name"])
        self.assertEqual(instance.description, jinjahelperfunction_dict["description"])
        self.assertEqual(instance.package, jinjahelperfunction_dict["package"])
        self.assertEqual(instance.module, jinjahelperfunction_dict["module"])
        self.assertEqual(instance.function, jinjahelperfunction_dict["function"])

        jinjahelperfunction_dict = (
            JinjaHelperFunctionTestHelper.generate_data_required_only()
        )
        instance = JinjaHelperFunction.from_dict(deepcopy(jinjahelperfunction_dict))
        self.assertEqual(instance.name, jinjahelperfunction_dict["name"])
        self.assertEqual(instance.package, jinjahelperfunction_dict["package"])
        self.assertEqual(instance.module, jinjahelperfunction_dict["module"])
        self.assertEqual(instance.function, jinjahelperfunction_dict["function"])


if __name__ == "__main__":
    unittest.main()
