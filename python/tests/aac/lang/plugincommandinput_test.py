# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.plugincommandinput import PluginCommandInput


class PluginCommandInputTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "description": "test",
            "type": "test",
            "default": "test",
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
            "type": "test",
        }


class TestPluginCommandInput(unittest.TestCase):
    def test_plugincommandinput_from_dict_all_fields(self):
        plugincommandinput_dict = PluginCommandInputTestHelper.generate_data()
        instance = PluginCommandInput.from_dict(deepcopy(plugincommandinput_dict))
        self.assertEqual(instance.name, plugincommandinput_dict["name"])
        self.assertEqual(instance.description, plugincommandinput_dict["description"])
        self.assertEqual(instance.type, plugincommandinput_dict["type"])
        self.assertEqual(instance.default, plugincommandinput_dict["default"])

        plugincommandinput_dict = (
            PluginCommandInputTestHelper.generate_data_required_only()
        )
        instance = PluginCommandInput.from_dict(deepcopy(plugincommandinput_dict))
        self.assertEqual(instance.name, plugincommandinput_dict["name"])
        self.assertEqual(instance.type, plugincommandinput_dict["type"])


if __name__ == "__main__":
    unittest.main()
