# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.feature import Feature
from aac.lang.background import Background
from aac.lang.scenario import Scenario
from background_test import BackgroundTestHelper
from scenario_test import ScenarioTestHelper


class FeatureTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "background": BackgroundTestHelper.generate_data(),
            "scenarios": [ScenarioTestHelper.generate_data()],
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
            "scenarios": [ScenarioTestHelper.generate_data_required_only()],
        }


class TestFeature(unittest.TestCase):
    def test_feature_from_dict_all_fields(self):
        feature_dict = FeatureTestHelper.generate_data()
        instance = Feature.from_dict(deepcopy(feature_dict))
        self.assertEqual(instance.name, feature_dict["name"])
        self.assertIsNotNone(instance.background)
        self.assertIsNotNone(instance.scenarios)

        feature_dict = FeatureTestHelper.generate_data_required_only()
        instance = Feature.from_dict(deepcopy(feature_dict))
        self.assertEqual(instance.name, feature_dict["name"])
        self.assertIsNotNone(instance.scenarios)


if __name__ == "__main__":
    unittest.main()
