# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.primitive import Primitive
from aac.lang.primitiveconstraintassignment import PrimitiveConstraintAssignment
from primitiveconstraintassignment_test import PrimitiveConstraintAssignmentTestHelper


class PrimitiveTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "python_type": "test",
            "constraints": [PrimitiveConstraintAssignmentTestHelper.generate_data()],
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "python_type": "test",
        }


class TestPrimitive(unittest.TestCase):
    def test_primitive_from_dict_all_fields(self):
        primitive_dict = PrimitiveTestHelper.generate_data()
        instance = Primitive.from_dict(deepcopy(primitive_dict))
        self.assertEqual(instance.python_type, primitive_dict["python_type"])
        self.assertIsNotNone(instance.constraints)

        primitive_dict = PrimitiveTestHelper.generate_data_required_only()
        instance = Primitive.from_dict(deepcopy(primitive_dict))
        self.assertEqual(instance.python_type, primitive_dict["python_type"])


if __name__ == "__main__":
    unittest.main()
