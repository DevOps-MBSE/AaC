# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.plugin import Plugin
from aac.lang.plugincommand import PluginCommand
from plugincommand_test import PluginCommandTestHelper


class PluginTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "package": "test",
            "description": "test",
            "commands": [PluginCommandTestHelper.generate_data()],
            "definition_sources": ["test"],
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
            "package": "test",
        }


class TestPlugin(unittest.TestCase):
    def test_plugin_from_dict_all_fields(self):
        plugin_dict = PluginTestHelper.generate_data()
        instance = Plugin.from_dict(deepcopy(plugin_dict))
        self.assertEqual(instance.name, plugin_dict["name"])
        self.assertEqual(instance.package, plugin_dict["package"])
        self.assertEqual(instance.description, plugin_dict["description"])
        self.assertIsNotNone(instance.commands)
        self.assertEqual(instance.definition_sources, plugin_dict["definition_sources"])

        plugin_dict = PluginTestHelper.generate_data_required_only()
        instance = Plugin.from_dict(deepcopy(plugin_dict))
        self.assertEqual(instance.name, plugin_dict["name"])
        self.assertEqual(instance.package, plugin_dict["package"])


if __name__ == "__main__":
    unittest.main()
