# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.usecase import Usecase

TEST_DATA_ALL = {
    "name": "test",
    "package": "test",
    "description": "test",
    "includes": ["test", "test"],
    "extends": ["test", "test"],
    "participants": ["test", "test"],
    "steps": ["test", "test"],
}

TEST_DATA_REQUIRED = {"name": "test"}


class TestUsecase(unittest.TestCase):
    def test_usecase_from_dict_all_fields(self):
        usecase_dict = TEST_DATA_ALL
        instance = Usecase.from_dict(deepcopy(usecase_dict))
        self.assertEqual(instance.name, usecase_dict["name"])
        self.assertEqual(instance.package, usecase_dict["package"])
        self.assertEqual(instance.description, usecase_dict["description"])
        self.assertEqual(instance.includes, usecase_dict["includes"])
        self.assertEqual(instance.extends, usecase_dict["extends"])
        self.assertEqual(instance.participants, usecase_dict["participants"])
        self.assertEqual(instance.steps, usecase_dict["steps"])

        usecase_dict = TEST_DATA_REQUIRED
        instance = Usecase.from_dict(deepcopy(usecase_dict))
        self.assertEqual(instance.name, usecase_dict["name"])


if __name__ == "__main__":
    unittest.main()
