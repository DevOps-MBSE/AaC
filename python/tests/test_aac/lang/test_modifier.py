# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.modifier import Modifier
from aac.lang.field import Field
from .test_field import FieldTestHelper


class ModifierTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "description": "test",
            "fields": [FieldTestHelper.generate_data()],
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
        }


class TestModifier(unittest.TestCase):
    def test_modifier_from_dict_all_fields(self):
        modifier_dict = ModifierTestHelper.generate_data()
        instance = Modifier.from_dict(deepcopy(modifier_dict))
        self.assertEqual(instance.name, modifier_dict["name"])
        self.assertEqual(instance.description, modifier_dict["description"])
        self.assertIsNotNone(instance.fields)

        modifier_dict = ModifierTestHelper.generate_data_required_only()
        instance = Modifier.from_dict(deepcopy(modifier_dict))
        self.assertEqual(instance.name, modifier_dict["name"])


if __name__ == "__main__":
    unittest.main()
