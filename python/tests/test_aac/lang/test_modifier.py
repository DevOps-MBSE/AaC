# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.modifier import Modifier

TEST_DATA_ALL = {
    "name": "test",
    "description": "test",
    "fields": [
        {
            "name": "test",
            "type": "test",
            "description": "test",
            "is_required": True,
            "default": "test",
        },
        {
            "name": "test",
            "type": "test",
            "description": "test",
            "is_required": True,
            "default": "test",
        },
    ],
}

TEST_DATA_REQUIRED = {"name": "test"}


class TestModifier(unittest.TestCase):
    def test_modifier_from_dict_all_fields(self):
        modifier_dict = TEST_DATA_ALL
        instance = Modifier.from_dict(deepcopy(modifier_dict))
        self.assertEqual(instance.name, modifier_dict["name"])
        self.assertEqual(instance.description, modifier_dict["description"])
        self.assertIsNotNone(instance.fields)

        modifier_dict = TEST_DATA_REQUIRED
        instance = Modifier.from_dict(deepcopy(modifier_dict))
        self.assertEqual(instance.name, modifier_dict["name"])


if __name__ == "__main__":
    unittest.main()
