# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.requirementattribute import RequirementAttribute


class RequirementAttributeTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "value": "test",
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
            "value": "test",
        }


class TestRequirementAttribute(unittest.TestCase):
    def test_requirementattribute_from_dict_all_fields(self):
        requirementattribute_dict = RequirementAttributeTestHelper.generate_data()
        instance = RequirementAttribute.from_dict(deepcopy(requirementattribute_dict))
        self.assertEqual(instance.name, requirementattribute_dict["name"])
        self.assertEqual(instance.value, requirementattribute_dict["value"])

        requirementattribute_dict = (
            RequirementAttributeTestHelper.generate_data_required_only()
        )
        instance = RequirementAttribute.from_dict(deepcopy(requirementattribute_dict))
        self.assertEqual(instance.name, requirementattribute_dict["name"])
        self.assertEqual(instance.value, requirementattribute_dict["value"])


if __name__ == "__main__":
    unittest.main()
