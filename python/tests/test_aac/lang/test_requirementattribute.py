# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.requirementattribute import RequirementAttribute

TEST_DATA_ALL = {"name": "test", "value": "test"}

TEST_DATA_REQUIRED = {"name": "test", "value": "test"}


class TestRequirementAttribute(unittest.TestCase):
    def test_requirementattribute_from_dict_all_fields(self):
        requirementattribute_dict = TEST_DATA_ALL
        instance = RequirementAttribute.from_dict(deepcopy(requirementattribute_dict))
        self.assertEqual(instance.name, requirementattribute_dict["name"])
        self.assertEqual(instance.value, requirementattribute_dict["value"])

        requirementattribute_dict = TEST_DATA_REQUIRED
        instance = RequirementAttribute.from_dict(deepcopy(requirementattribute_dict))
        self.assertEqual(instance.name, requirementattribute_dict["name"])
        self.assertEqual(instance.value, requirementattribute_dict["value"])


if __name__ == "__main__":
    unittest.main()
