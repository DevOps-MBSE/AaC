# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.usecaseactor import UsecaseActor

TEST_DATA_ALL = {
    "name": "test",
    "description": "test",
    "tags": ["test", "test"],
    "model": "test",
    "requirements": ["test", "test"],
}

TEST_DATA_REQUIRED = {"name": "test"}


class TestUsecaseActor(unittest.TestCase):
    def test_usecaseactor_from_dict_all_fields(self):
        usecaseactor_dict = TEST_DATA_ALL
        instance = UsecaseActor.from_dict(deepcopy(usecaseactor_dict))
        self.assertEqual(instance.name, usecaseactor_dict["name"])
        self.assertEqual(instance.description, usecaseactor_dict["description"])
        self.assertEqual(instance.tags, usecaseactor_dict["tags"])
        self.assertEqual(instance.model, usecaseactor_dict["model"])
        self.assertEqual(instance.requirements, usecaseactor_dict["requirements"])

        usecaseactor_dict = TEST_DATA_REQUIRED
        instance = UsecaseActor.from_dict(deepcopy(usecaseactor_dict))
        self.assertEqual(instance.name, usecaseactor_dict["name"])


if __name__ == "__main__":
    unittest.main()
