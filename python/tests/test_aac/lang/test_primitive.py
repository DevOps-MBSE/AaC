# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.primitive import Primitive

TEST_DATA_ALL = {
    "python_type": "test",
    "constraints": [
        {"name": "test", "arguments": "{}"},
        {"name": "test", "arguments": "{}"},
    ],
}

TEST_DATA_REQUIRED = {"python_type": "test"}


class TestPrimitive(unittest.TestCase):
    def test_primitive_from_dict_all_fields(self):
        primitive_dict = TEST_DATA_ALL
        instance = Primitive.from_dict(deepcopy(primitive_dict))
        self.assertEqual(instance.python_type, primitive_dict["python_type"])
        self.assertIsNotNone(instance.constraints)

        primitive_dict = TEST_DATA_REQUIRED
        instance = Primitive.from_dict(deepcopy(primitive_dict))
        self.assertEqual(instance.python_type, primitive_dict["python_type"])


if __name__ == "__main__":
    unittest.main()
