# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.feature import Feature

TEST_DATA_ALL = {
    "name": "test",
    "background": {"name": "test", "given": ["test", "test"]},
    "scenarios": [
        {
            "name": "test",
            "tags": ["test", "test"],
            "given": ["test", "test"],
            "when": ["test", "test"],
            "then": ["test", "test"],
            "examples": {
                "name": "test",
                "values": [
                    {"name": "test", "value": "test"},
                    {"name": "test", "value": "test"},
                ],
            },
        },
        {
            "name": "test",
            "tags": ["test", "test"],
            "given": ["test", "test"],
            "when": ["test", "test"],
            "then": ["test", "test"],
            "examples": {
                "name": "test",
                "values": [
                    {"name": "test", "value": "test"},
                    {"name": "test", "value": "test"},
                ],
            },
        },
    ],
}

TEST_DATA_REQUIRED = {
    "name": "test",
    "scenarios": [
        {"name": "test", "when": ["test", "test"], "then": ["test", "test"]},
        {"name": "test", "when": ["test", "test"], "then": ["test", "test"]},
    ],
}


class TestFeature(unittest.TestCase):
    def test_feature_from_dict_all_fields(self):
        feature_dict = TEST_DATA_ALL
        instance = Feature.from_dict(deepcopy(feature_dict))
        self.assertEqual(instance.name, feature_dict["name"])
        self.assertIsNotNone(instance.background)
        self.assertIsNotNone(instance.scenarios)

        feature_dict = TEST_DATA_REQUIRED
        instance = Feature.from_dict(deepcopy(feature_dict))
        self.assertEqual(instance.name, feature_dict["name"])
        self.assertIsNotNone(instance.scenarios)


if __name__ == "__main__":
    unittest.main()
