# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from aac.lang.cardinallity import Cardinallity


class CardinallityTestHelper:
    @staticmethod
    def generate_data() -> str:
        return "ONE"

    @staticmethod
    def generate_data_required_only() -> str:
        return CardinallityTestHelper.generate_data()


class TestCardinallity(unittest.TestCase):
    def test_cardinallity_from_dict(self):
        self.assertEqual(Cardinallity.from_dict("ONE"), Cardinallity.ONE)
        self.assertEqual(
            Cardinallity.from_dict("ZERO_OR_ONE"), Cardinallity.ZERO_OR_ONE
        )
        self.assertEqual(
            Cardinallity.from_dict("ONE_OR_MORE"), Cardinallity.ONE_OR_MORE
        )
        self.assertEqual(
            Cardinallity.from_dict("ZERO_OR_MORE"), Cardinallity.ZERO_OR_MORE
        )
        self.assertEqual(Cardinallity.from_dict("MANY"), Cardinallity.MANY)

        with self.assertRaises(ValueError):
            Cardinallity.from_dict("NEVER_GONNA_BE_A_VALID_ENUM_VALUE")


if __name__ == "__main__":
    unittest.main()
