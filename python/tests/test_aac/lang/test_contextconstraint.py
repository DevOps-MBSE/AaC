# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.contextconstraint import ContextConstraint

TEST_DATA_ALL = {
    "name": "test",
    "description": "test",
    "acceptance": [
        {
            "name": "test",
            "background": {"name": "test", "given": ["test", "test"]},
            "scenarios": [
                {
                    "name": "test",
                    "tags": ["test", "test"],
                    "given": ["test", "test"],
                    "when": ["test", "test"],
                    "then": ["test", "test"],
                    "examples": {
                        "name": "test",
                        "values": [
                            {"name": "test", "value": "test"},
                            {"name": "test", "value": "test"},
                        ],
                    },
                },
                {
                    "name": "test",
                    "tags": ["test", "test"],
                    "given": ["test", "test"],
                    "when": ["test", "test"],
                    "then": ["test", "test"],
                    "examples": {
                        "name": "test",
                        "values": [
                            {"name": "test", "value": "test"},
                            {"name": "test", "value": "test"},
                        ],
                    },
                },
            ],
        },
        {
            "name": "test",
            "background": {"name": "test", "given": ["test", "test"]},
            "scenarios": [
                {
                    "name": "test",
                    "tags": ["test", "test"],
                    "given": ["test", "test"],
                    "when": ["test", "test"],
                    "then": ["test", "test"],
                    "examples": {
                        "name": "test",
                        "values": [
                            {"name": "test", "value": "test"},
                            {"name": "test", "value": "test"},
                        ],
                    },
                },
                {
                    "name": "test",
                    "tags": ["test", "test"],
                    "given": ["test", "test"],
                    "when": ["test", "test"],
                    "then": ["test", "test"],
                    "examples": {
                        "name": "test",
                        "values": [
                            {"name": "test", "value": "test"},
                            {"name": "test", "value": "test"},
                        ],
                    },
                },
            ],
        },
    ],
}

TEST_DATA_REQUIRED = {"name": "test"}


class TestContextConstraint(unittest.TestCase):
    def test_contextconstraint_from_dict_all_fields(self):
        contextconstraint_dict = TEST_DATA_ALL
        instance = ContextConstraint.from_dict(deepcopy(contextconstraint_dict))
        self.assertEqual(instance.name, contextconstraint_dict["name"])
        self.assertEqual(instance.description, contextconstraint_dict["description"])
        self.assertIsNotNone(instance.acceptance)

        contextconstraint_dict = TEST_DATA_REQUIRED
        instance = ContextConstraint.from_dict(deepcopy(contextconstraint_dict))
        self.assertEqual(instance.name, contextconstraint_dict["name"])


if __name__ == "__main__":
    unittest.main()
