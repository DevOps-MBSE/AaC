# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.project import Project
from aac.lang.projectdependency import ProjectDependency
from .test_projectdependency import ProjectDependencyTestHelper


class ProjectTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "description": "test",
            "uses": [ProjectDependencyTestHelper.generate_data()],
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
        }


class TestProject(unittest.TestCase):
    def test_project_from_dict_all_fields(self):
        project_dict = ProjectTestHelper.generate_data()
        instance = Project.from_dict(deepcopy(project_dict))
        self.assertEqual(instance.name, project_dict["name"])
        self.assertEqual(instance.description, project_dict["description"])
        self.assertIsNotNone(instance.uses)

        project_dict = ProjectTestHelper.generate_data_required_only()
        instance = Project.from_dict(deepcopy(project_dict))
        self.assertEqual(instance.name, project_dict["name"])


if __name__ == "__main__":
    unittest.main()
