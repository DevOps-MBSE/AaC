# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.modelcomponent import ModelComponent

TEST_DATA_ALL = {
    "name": "test",
    "description": "test",
    "cardinallity": "ONE",
    "model": "test",
}

TEST_DATA_REQUIRED = {"name": "test", "model": "test"}


class TestModelComponent(unittest.TestCase):
    def test_modelcomponent_from_dict_all_fields(self):
        modelcomponent_dict = TEST_DATA_ALL
        instance = ModelComponent.from_dict(deepcopy(modelcomponent_dict))
        self.assertEqual(instance.name, modelcomponent_dict["name"])
        self.assertEqual(instance.description, modelcomponent_dict["description"])
        self.assertIsNotNone(instance.cardinallity)
        self.assertEqual(instance.model, modelcomponent_dict["model"])

        modelcomponent_dict = TEST_DATA_REQUIRED
        instance = ModelComponent.from_dict(deepcopy(modelcomponent_dict))
        self.assertEqual(instance.name, modelcomponent_dict["name"])
        self.assertEqual(instance.model, modelcomponent_dict["model"])


if __name__ == "__main__":
    unittest.main()
