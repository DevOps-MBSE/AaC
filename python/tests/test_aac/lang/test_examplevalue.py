# WARNING - DO NOT EDIT - YOUR CHANGES WILL NOT BE PROTECTED.
# This file is auto-generated by the aac gen-plugin and may be overwritten.

import unittest
from copy import deepcopy
from aac.lang.examplevalue import ExampleValue


class ExampleValueTestHelper:
    @staticmethod
    def generate_data() -> dict:
        return {
            "name": "test",
            "value": "test",
        }

    @staticmethod
    def generate_data_required_only() -> dict:
        return {
            "name": "test",
            "value": "test",
        }


class TestExampleValue(unittest.TestCase):
    def test_examplevalue_from_dict_all_fields(self):
        examplevalue_dict = ExampleValueTestHelper.generate_data()
        instance = ExampleValue.from_dict(deepcopy(examplevalue_dict))
        self.assertEqual(instance.name, examplevalue_dict["name"])
        self.assertEqual(instance.value, examplevalue_dict["value"])

        examplevalue_dict = ExampleValueTestHelper.generate_data_required_only()
        instance = ExampleValue.from_dict(deepcopy(examplevalue_dict))
        self.assertEqual(instance.name, examplevalue_dict["name"])
        self.assertEqual(instance.value, examplevalue_dict["value"])


if __name__ == "__main__":
    unittest.main()
