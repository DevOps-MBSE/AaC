"""Module for providing a consistent set of re-usable definitions for testing."""
import copy
from aac.plugins.validators import required_fields
from aac.plugins.validators import defined_references
from aac.lang.constants import (
    DEFINITION_NAME_ROOT,
    PRIMITIVE_TYPE_BOOL,
    PRIMITIVE_TYPE_DATE,
    PRIMITIVE_TYPE_FILE,
    PRIMITIVE_TYPE_NUMBER,
    PRIMITIVE_TYPE_REFERENCE,
    PRIMITIVE_TYPE_STRING,
    PRIMITIVE_TYPE_INT,
    DEFINITION_FIELD_NAME,
    DEFINITION_FIELD_ARGUMENTS,
)

from tests.helpers.parsed_definitions import (
    create_schema_definition,
    create_field_entry,
    create_schema_ext_definition,
    create_validation_entry,
    create_definition
)


# Validation Entries
DEFINED_REFERENCE_VALIDATION_NAME = defined_references.PLUGIN_NAME
DEFINED_REFERENCE_VALIDATION = create_validation_entry(DEFINED_REFERENCE_VALIDATION_NAME)

REQUIRED_FIELDS_VALIDATION_NAME = required_fields.PLUGIN_NAME
REQUIRED_FIELDS_VALIDATION = create_validation_entry(REQUIRED_FIELDS_VALIDATION_NAME)

# Inheritance Test Definitions
TEST_SCHEMA_PARENT_1_NAME = "Parent1"
TEST_SCHEMA_PARENT_1_FIELD_NAME = "P1F1"
TEST_SCHEMA_PARENT_1_FIELD_TYPE = PRIMITIVE_TYPE_INT
TEST_SCHEMA_PARENT_1_FIELD = create_field_entry(TEST_SCHEMA_PARENT_1_FIELD_NAME, TEST_SCHEMA_PARENT_1_FIELD_TYPE)
TEST_SCHEMA_PARENT_1_VALIDATION = copy.deepcopy(REQUIRED_FIELDS_VALIDATION)
TEST_SCHEMA_PARENT_1_VALIDATION_NAME = TEST_SCHEMA_PARENT_1_VALIDATION.get(DEFINITION_FIELD_NAME)
TEST_SCHEMA_PARENT_1_VALIDATION[DEFINITION_FIELD_ARGUMENTS] = [TEST_SCHEMA_PARENT_1_FIELD_NAME]
TEST_SCHEMA_PARENT_1 = create_schema_definition(
    TEST_SCHEMA_PARENT_1_NAME, fields=[TEST_SCHEMA_PARENT_1_FIELD], validations=[TEST_SCHEMA_PARENT_1_VALIDATION]
)

TEST_SCHEMA_PARENT_2_NAME = "Parent2"
TEST_SCHEMA_PARENT_2_FIELD_NAME = "P2F1"
TEST_SCHEMA_PARENT_2_FIELD_TYPE = PRIMITIVE_TYPE_STRING
TEST_SCHEMA_PARENT_2_FIELD = create_field_entry(TEST_SCHEMA_PARENT_2_FIELD_NAME, TEST_SCHEMA_PARENT_2_FIELD_TYPE)
TEST_SCHEMA_PARENT_2_VALIDATION = copy.deepcopy(DEFINED_REFERENCE_VALIDATION)
TEST_SCHEMA_PARENT_2_VALIDATION_NAME = TEST_SCHEMA_PARENT_2_VALIDATION.get(DEFINITION_FIELD_NAME)
TEST_SCHEMA_PARENT_2_VALIDATION[DEFINITION_FIELD_ARGUMENTS] = [TEST_SCHEMA_PARENT_2_FIELD_NAME]
TEST_SCHEMA_PARENT_2 = create_schema_definition(
    TEST_SCHEMA_PARENT_2_NAME, fields=[TEST_SCHEMA_PARENT_2_FIELD], validations=[TEST_SCHEMA_PARENT_2_VALIDATION]
)

TEST_SCHEMA_CHILD_NAME = "Child"
TEST_SCHEMA_CHILD_FIELD_NAME = "ChildField1"
TEST_SCHEMA_CHILD_FIELD_TYPE = PRIMITIVE_TYPE_STRING
TEST_SCHEMA_CHILD_FIELD = create_field_entry(TEST_SCHEMA_CHILD_FIELD_NAME, TEST_SCHEMA_CHILD_FIELD_TYPE)
TEST_SCHEMA_CHILD = create_schema_definition(
    TEST_SCHEMA_CHILD_NAME, fields=[TEST_SCHEMA_CHILD_FIELD], inherits=[TEST_SCHEMA_PARENT_1_NAME, TEST_SCHEMA_PARENT_2_NAME]
)

# Primitive Validation Definitions
SCHEMA_FIELD_INT = create_field_entry("intField", PRIMITIVE_TYPE_INT)
SCHEMA_FIELD_STRING = create_field_entry("stringField", PRIMITIVE_TYPE_STRING)
SCHEMA_FIELD_NUMBER = create_field_entry("numberField", PRIMITIVE_TYPE_NUMBER)
SCHEMA_FIELD_BOOL = create_field_entry("boolField", PRIMITIVE_TYPE_BOOL)
SCHEMA_FIELD_DATE = create_field_entry("dateField", PRIMITIVE_TYPE_DATE)
SCHEMA_FIELD_FILE = create_field_entry("fileField", PRIMITIVE_TYPE_FILE)
SCHEMA_FIELD_REFERENCE = create_field_entry("referenceField", PRIMITIVE_TYPE_REFERENCE)

TEST_TYPES_SCHEMA_DEFINITION = create_schema_definition(
    "TestPrimitiveTypeSchema",
    fields=[
        SCHEMA_FIELD_INT,
        SCHEMA_FIELD_STRING,
        SCHEMA_FIELD_NUMBER,
        SCHEMA_FIELD_BOOL,
        SCHEMA_FIELD_DATE,
        SCHEMA_FIELD_FILE,
        SCHEMA_FIELD_REFERENCE
    ]
)

TEST_TYPES_ROOT_KEY = "primitive_tests"
TEST_TYPES_SCHEMA_EXTENSION_FIELD = create_field_entry(TEST_TYPES_ROOT_KEY, TEST_TYPES_SCHEMA_DEFINITION.name)
TEST_TYPES_SCHEMA_EXTENSION_DEFINITION = create_schema_ext_definition(f"{TEST_TYPES_SCHEMA_DEFINITION.name}Extension", DEFINITION_NAME_ROOT, fields=[TEST_TYPES_SCHEMA_EXTENSION_FIELD])
TEST_TYPES_VALID_INSTANCE = create_definition(TEST_TYPES_ROOT_KEY, "validPrimitives", {SCHEMA_FIELD_INT.get("name"): 0})
TEST_TYPES_INVALID_INSTANCE = create_definition(TEST_TYPES_ROOT_KEY, "invalidPrimitives", {SCHEMA_FIELD_INT.get("name"): 0.5})
